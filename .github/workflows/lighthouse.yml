name: Vercel Preview Lighthouse Audit

permissions:
  pull-requests: write
  checks: read
  contents: read
  deployments: read

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

on:
  pull_request:
    types: [synchronize, opened]

jobs:
  generate_lighthouse_audit:
    timeout-minutes: 30
    runs-on: ubuntu-latest-4cores-16gb
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Wait for the Vercel deployment
        uses: patrickedqvist/wait-for-vercel-preview@v1.3.1
        id: wait_for_deployment
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          environment: Preview
          max_timeout: 1200

      - name: Add comment to PR
        id: loading_comment_to_pr
        uses: marocchino/sticky-pull-request-comment@v2.9.0
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          number: ${{ github.event.pull_request.number }}
          header: lighthouse
          message: |
            Running Lighthouse audit...

      - name: Audit preview build with Lighthouse
        id: lighthouse_audit
        uses: treosh/lighthouse-ci-action@v11
        env:
          LHCI_BUILD_CONTEXT__CURRENT_HASH: ${{ github.sha }}
        with:
          urls: |
            ${{ steps.wait_for_deployment.outputs.url }}
          runs: 3
          uploadArtifacts: true
          temporaryPublicStorage: true

      - name: Format Lighthouse score and generate detailed report
        id: format_lighthouse_score
        continue-on-error: true
        uses: actions/github-script@v7.0.1
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          result-encoding: string
          script: |
            // The Lighthouse action outputs two JSON values:
            // - manifest: an array of audit results
            // - links: an object mapping audited URLs to detailed report URLs
            const results = ${{ steps.lighthouse_audit.outputs.manifest }};
            const links = ${{ steps.lighthouse_audit.outputs.links }};
            const representativeResults = results.filter(result => result.isRepresentativeRun);

            const commentLines = ['⚡️ Lighthouse Report for the changes in this PR:', ' '];

            if (representativeResults.length > 0) {
              representativeResults.forEach((rep, i) => {
                const result = rep.summary;
                // Convert scores to percentages
                for (const key in result) {
                  result[key] = Math.round(result[key] * 100);
                }
                // Choose an emoji based on the score
                const scoreEmoji = res => res >= 90 ? '🟢' : res >= 50 ? '🟠' : '🔴';
                
                commentLines.push(
                  '---',
                  `Results for [${Object.keys(links)[i]}](${Object.keys(links)[i]}):`,
                  '| Category | Score |',
                  '| --- | --- |',
                  `| ${scoreEmoji(result.performance)} Performance | ${result.performance} |`,
                  `| ${scoreEmoji(result.accessibility)} Accessibility | ${result.accessibility} |`,
                  `| ${scoreEmoji(result['best-practices'])} Best practices | ${result['best-practices']} |`,
                  `| ${scoreEmoji(result.seo)} SEO | ${result.seo} |`,
                  ' ',
                  `*Detailed Report: [Lighthouse report](${Object.values(links)[i]})*`,
                  ' '
                );
                // Use the accessibility score from the first result for threshold checking
                if (i === 0) {
                  core.setOutput("accessibility_score", result.accessibility);
                }
              });
            } else {
              commentLines.push("No representative Lighthouse results found.");
              core.setOutput("accessibility_score", 0);
            }

            const output = commentLines.join('\n');
            core.setOutput("result", output);
            return output;

      - name: Report error to PR
        id: report_error_to_pr
        if: ${{ steps.format_lighthouse_score.outcome != 'success' }}
        uses: marocchino/sticky-pull-request-comment@v2.9.0
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          number: ${{ github.event.pull_request.number }}
          header: lighthouse
          message: |
            Error while running Lighthouse audit:
            ${{ steps.format_lighthouse_score.outputs.result }}

      - name: Add results to PR
        id: results_to_pr
        if: ${{ steps.format_lighthouse_score.outcome == 'success' }}
        uses: marocchino/sticky-pull-request-comment@v2.9.0
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          number: ${{ github.event.pull_request.number }}
          header: lighthouse
          message: |
            ${{ steps.format_lighthouse_score.outputs.result }}

      - name: Fail if Accessibility Score is below 90
        id: check_accessibility
        run: |
          echo "Current Accessibility Score: ${{ steps.format_lighthouse_score.outputs.accessibility_score }}"
          if [ "${{ steps.format_lighthouse_score.outputs.accessibility_score }}" -lt 90 ]; then
            echo "Accessibility score (${{ steps.format_lighthouse_score.outputs.accessibility_score }}) is below the threshold (90). Failing the job."
            exit 1
          fi
