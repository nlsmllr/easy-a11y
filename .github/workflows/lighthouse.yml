name: Vercel Preview Lighthouse Audit

permissions:
  pull-requests: write
  checks: read
  contents: read
  deployments: read

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true # for second commit

on:
  pull_request:
    types: [synchronize, opened]

jobs:
  generate_lighthouse_audit:
    timeout-minutes: 30
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Wait for the Vercel deployment
        uses: patrickedqvist/wait-for-vercel-preview@v1.3.1
        id: wait_for_deployment
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          environment: Preview # Ensure this matches exactly with Vercel's environment name
          max_timeout: 1200

      - name: Add comment to PR
        id: loading_comment_to_pr
        uses: marocchino/sticky-pull-request-comment@v2.9.0
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          number: ${{ github.event.pull_request.number }}
          header: lighthouse
          message: |
            Running Lighthouse audit...

            - name: Audit preview build with Lighthouse
              id: lighthouse_audit
              uses: treosh/lighthouse-ci-action@v11
              env:
                LHCI_BUILD_CONTEXT__CURRENT_HASH: ${{ github.sha }}
              with:
                urls: |
                  ${{ steps.wait_for_deployment.outputs.url }}
                runs: 3 # Run 3 times for consistency
                uploadArtifacts: true # Upload the report as a GitHub Actions artifact
                temporaryPublicStorage: true # Ensure temporary public storage for Lighthouse report

            - name: Extract and format Lighthouse details
              id: format_lighthouse_details
              run: |
                REPORT_PATH=$(find .lighthouseci -name "*.report.json" | head -n 1)
                HTML_REPORT_PATH=$(find .lighthouseci -name "*.report.html" | head -n 1)
                if [ -f "$HTML_REPORT_PATH" ]; then
                  # Upload the HTML report as an artifact
                  echo "::set-output name=html_report_path::$HTML_REPORT_PATH"
                else
                  echo "Lighthouse report not found."
                  HTML_REPORT_PATH=""
                fi
                echo "report_link=https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}/artifacts" >> $GITHUB_ENV

            - name: Upload Lighthouse HTML Report
              if: ${{ steps.format_lighthouse_details.outputs.html_report_path != '' }}
              uses: actions/upload-artifact@v3
              with:
                name: lighthouse-report
                path: ${{ steps.format_lighthouse_details.outputs.html_report_path }}

            - name: Add results to PR
              id: results_to_pr
              uses: marocchino/sticky-pull-request-comment@v2.9.0
              with:
                GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
                number: ${{ github.event.pull_request.number }}
                header: lighthouse
                message: |
                  ‚ö°Ô∏è Lighthouse Report for the changes in this PR:

                  | Category         | Score |
                  | ---------------- | ----- |
                  | üü¢ Performance   | ${{ env.performance_score }} |
                  | üü† Accessibility | ${{ env.accessibility_score }} |
                  | üü¢ Best Practices| ${{ env.best_practices_score }} |
                  | üü¢ SEO           | ${{ env.seo_score }} |

                  *Detailed Report: [Download Lighthouse Report](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}/artifacts)*
